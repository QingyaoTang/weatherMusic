<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tang.appservice.mapper.FypMusicMapper">
    
    <resultMap type="FypMusic" id="FypMusicResult">
        <result property="musicId"    column="music_id"    />
        <result property="weather"    column="weather"    />
        <result property="musicName"    column="music_name"    />
        <result property="musicPath"    column="music_path"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectFypMusicVo">
        select music_id, weather, music_name, music_path, create_by, create_time, update_by, update_time, remark from fyp_music
    </sql>

    <select id="selectFypMusicList" parameterType="FypMusic" resultMap="FypMusicResult">
        <include refid="selectFypMusicVo"/>
        <where>  
            <if test="weather != null "> and weather = #{weather}</if>
            <if test="musicName != null  and musicName != ''"> and music_name = #{musicName}</if>
            <if test="musicPath != null  and musicPath != ''"> and music_path = #{musicPath}</if>
            <if test="createBy != null  and createBy != ''"> and create_by = #{createBy}</if>
        </where>
    </select>
    
    <select id="selectFypMusicByMusicId" parameterType="Long" resultMap="FypMusicResult">
        <include refid="selectFypMusicVo"/>
        where music_id = #{musicId}
    </select>
        
    <insert id="insertFypMusic" parameterType="FypMusic" useGeneratedKeys="true" keyProperty="musicId">
        insert into fyp_music
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="weather != null">weather,</if>
            <if test="musicName != null">music_name,</if>
            <if test="musicPath != null">music_path,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="weather != null">#{weather},</if>
            <if test="musicName != null">#{musicName},</if>
            <if test="musicPath != null">#{musicPath},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateFypMusic" parameterType="FypMusic">
        update fyp_music
        <trim prefix="SET" suffixOverrides=",">
            <if test="weather != null">weather = #{weather},</if>
            <if test="musicName != null">music_name = #{musicName},</if>
            <if test="musicPath != null">music_path = #{musicPath},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where music_id = #{musicId}
    </update>

    <delete id="deleteFypMusicByMusicId" parameterType="Long">
        delete from fyp_music where music_id = #{musicId}
    </delete>

    <delete id="deleteFypMusicByMusicIds" parameterType="String">
        delete from fyp_music where music_id in 
        <foreach item="musicId" collection="array" open="(" separator="," close=")">
            #{musicId}
        </foreach>
    </delete>
</mapper>